{"version":3,"sources":["store/actions/types.js","components/selectedItems/GetSelectedItem.js","components/selectedItems/SelectedItemWrapper.js","store/helpers/index.js","store/actions/carsActions.js","components/listsOfData/CarsList.js","store/actions/clientsActions.js","components/listsOfData/ClientsList.js","components/listsOfData/OperationsList.js","store/actions/operationsAction.js","components/listsOfData/ListsWrapper.js","components/forms/RegisterCar.js","components/forms/RegisterClient.js","components/forms/RegisterOperation.js","components/forms/EditClient.js","components/forms/EditCar.js","components/forms/EditOperation.js","components/forms/TargetCar.js","components/forms/TargetOperation.js","components/forms/FormsWrapper.js","components/content.js","components/footer.js","components/landingPage/NavBar.js","store/actions/authActions.js","components/landingPage/SignUpForm.js","components/landingPage/SignInForm.js","components/landingPage/About.js","components/landingPage/Landing.js","components/NavBar.js","App.js","store/reducers/clientsReducer.js","store/reducers/carsReducer.js","store/reducers/operationsReducer.js","store/reducers/targetReducer.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","store/store.js","index.js"],"names":["CLICKED","GetSelectedItem","target","cars","ops","firstname","lastname","carModel","name","dispatch","useDispatch","listItems","handleCarChange","e","targetCar","filter","car","value","type","payload","handleOperationChange","targetOperation","op","className","toUpperCase","slice","Object","entries","key","push","id","split","join","handleTargetObject","onChange","disabled","map","handleCars","handleOperations","SelectedItemWrapper","useSelector","state","item","keys","length","icon","faLaravel","hasOwnProperty","onClick","helpFetchMe","config","a","Axios","get","helpRegisterUser","body","post","helpLoginUser","helpFetchClients","helpAddClient","helpDeleteClient","_id","delete","helpEditClient","client","patch","helpFetchCars","helpAddCar","helpDeleteCar","helpEditCar","helpFetchOperations","helpAddOperation","helpDeleteOperation","helpEditOperation","operation","fetchCarsAction","response","data","CarsList","props","useState","selectedIndex","setSelectedIndex","classes","styles","myCars","carsArray","foundCar","foundCars","useEffect","index","ListItem","button","root","selected","handleOnClickListItem","faEdit","handleEditCar","faTrash","window","confirm","handleDeleteCar","fetchClientsAction","ClientsList","myClients","clients","clientsArray","foundClient","foundClients","handleEditClient","handleDeleteClient","OperationsList","Transition","allOperations","operations","operationsArray","handleEditOperation","handleDeleteOperation","ListsWrapper","makeStyles","maxWidth","borderRadius","color","background","clickedTab","RegisterCar","useForm","handleSubmit","register","errors","ownerId","icons","pageStyle","pageVariants","pageTransition","div","style","initial","animate","exit","variants","transition","onSubmit","newCar","headers","JSON","stringify","console","log","htmlFor","autoComplete","placeholder","defaultValue","ref","required","minLength","RegisterClient","newClient","pattern","message","RegisterOperation","carId","newOperation","EditClient","address","birthdate","email","Obj","assign","editClientAction","EditCar","carModelType","chassyNr","engine","plateNr","editCarAction","EditOperation","description","parts","cost","editOperationAction","TargetCar","handleTargetCar","TargetOperation","handleTargetOperation","FormsWrapper","isClicked","opacity","x","scale","in","out","ease","duration","position","faCheckCircle","faExclamationCircle","Content","Footer","faInstagram","faFacebook","faAt","NavBar","faBars","tokenConfig","token","SignUpForm","registerData","password","SignInForm","loginData","About","y","Landing","useStyles","input","setInput","search","setSearch","toLowerCase","match","List","preventDefault","App","isAuthenticated","auth","getState","localStorage","getItem","initialState","errorMsg","clientsReducer","action","carsReducer","OperationsReducer","isLoading","user","rootReducer","combineReducers","loadedState","setItem","loggedState","removeItem","operationsReducer","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98475a0a.chunk.js","sourcesContent":["// Selected Item (target) action type\r\nexport const CLICKED = \"CLICKED\";\r\nexport const SET_TARGET = \"SET_TARGET\";\r\nexport const TAB_CLICKED = \"TAB_CLICKED\";\r\n\r\n// Client Actions types\r\nexport const SET_CLIENT = \"SET_CLIENT\";\r\nexport const GET_CLIENTS = \"GET_CLIENTS\";\r\nexport const EDIT_CLIENT = \"EDIT_CLIENT\";\r\nexport const FIND_CLIENTS = \"FIND_CLIENTS\";\r\nexport const DELETE_CLIENT = \"DELETE_CLIENT\";\r\nexport const ADD_CLIENT_FAIL = \"ADD_CLIENT_FAIL\";\r\nexport const ADD_CLIENT = \"ADD_CLIENT\";\r\n\r\n// Cars Actions types\r\nexport const SET_CAR = \"SET_CAR\";\r\nexport const GET_CARS = \"GET_CARS\";\r\nexport const EDIT_CAR = \"EDIT_CAR\";\r\nexport const FIND_CARS = \"FIND_CARS\";\r\nexport const DELETE_CAR = \"DELETE_CAR\";\r\nexport const TARGET_CAR = \"TARGET_CAR\";\r\nexport const ADD_CAR_FAIL = \"ADD_CAR_FAIL\";\r\nexport const ADD_CAR_SUCCESS = \"ADD_CAR_SUCCESS\";\r\n\r\n// Operation Actions types\r\nexport const SET_OPERATION = \"SET_OPERATION\";\r\nexport const GET_OPERATIONS = \"GET_OPERATIONS\";\r\nexport const EDIT_OPERATION = \"EDIT_OPERATION\";\r\nexport const FIND_OPERATIONS = \"FIND_OPERATIONS\";\r\nexport const DELETE_OPERATION = \"DELETE_OPERATION\";\r\nexport const TARGET_OPERATION = \"TARGET_OPERATION\";\r\nexport const ADD_OPERATION_FAIL = \"ADD_OPERATION_FAIL\";\r\nexport const ADD_OPERATION_SUCCESS = \"ADD_OPERATION_SUCCESS\";\r\n\r\n// Authentications Actions\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\n\r\nexport const ERROR_MSG = \"ERROR_MSG\";\r\n","import React, { Fragment } from \"react\";\r\nimport { v4 as id } from \"uuid\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  CLICKED,\r\n  TARGET_OPERATION,\r\n  SET_TARGET,\r\n  TARGET_CAR,\r\n} from \"../../store/actions/types\";\r\n\r\n// Render data from  mongoDB in lists. Clients/ cars/ operations\r\n\r\nexport const GetSelectedItem = ({ target }) => {\r\n  const { cars, ops, firstname, lastname, carModel, name } = target;\r\n  const dispatch = useDispatch();\r\n\r\n  let listItems = [];\r\n  const handleTargetObject = (target) => {\r\n    for (const [key, value] of Object.entries(target)) {\r\n      if (key !== \"cars\" && key !== \"ops\") {\r\n        listItems.push(\r\n          <li key={id()}>\r\n            {key\r\n              .split(/(?=[A-Z])/)\r\n              .join(\" \")[0]\r\n              .toUpperCase() + key.slice(1)}\r\n            : {value}\r\n          </li>\r\n        );\r\n      }\r\n    }\r\n\r\n    return listItems;\r\n  };\r\n\r\n  const handleHeader = () => {\r\n    return (\r\n      <div className=\"selected-item-header\">\r\n        <small>\r\n          {cars &&\r\n            `${firstname[0].toUpperCase() + firstname.slice(1)} ${\r\n              lastname[0].toUpperCase() + lastname.slice(1)\r\n            }`}\r\n          {ops && `${carModel[0].toUpperCase() + carModel.slice(1)}`}\r\n          {name && `${name[0].toUpperCase() + name.slice(1)}`}{\" \"}\r\n        </small>\r\n        {/* <small\r\n          className=\"close\"\r\n          onClick={() => dispatch({ type: TARGET_CAR, payload: {} })}\r\n        >\r\n          x\r\n        </small> */}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Set cars owned by the selected client in a drop down list and show its data\r\n\r\n  const handleCarChange = (e) => {\r\n    const targetCar = cars.filter((car) => car.carModel === e.target.value);\r\n    dispatch({ type: TARGET_CAR, payload: targetCar });\r\n    dispatch({ type: CLICKED, payload: \"targetCar\" });\r\n  };\r\n\r\n  const handleCars = (cars) => (\r\n    <select value=\"1\" onChange={handleCarChange}>\r\n      <option value=\"1\" disabled>\r\n        Cars\r\n      </option>\r\n      {cars.map((car) => (\r\n        <option key={id()} value={car.carModel}>\r\n          {car.carModel}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n\r\n  // Set the related operations to the selected car in a drop down list and show its data\r\n\r\n  const handleOperationChange = (e) => {\r\n    const targetOperation = ops.filter((op) => op.name === e.target.value);\r\n    dispatch({ type: TARGET_OPERATION, payload: targetOperation });\r\n    dispatch({ type: CLICKED, payload: \"targetOperation\" });\r\n  };\r\n\r\n  const handleOperations = (ops) => (\r\n    <select value=\"1\" onChange={handleOperationChange}>\r\n      <option value=\"1\" disabled>\r\n        Operations\r\n      </option>\r\n      {ops.map((op) => (\r\n        <option key={id()} value={op.name}>\r\n          {op.name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      {handleHeader()}\r\n      <ul>{handleTargetObject(target)}</ul>\r\n      {cars && handleCars(cars)}\r\n      {ops && handleOperations(ops)}\r\n    </Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { GetSelectedItem } from \"./GetSelectedItem\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CLICKED } from \"../../store/actions/types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLaravel } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nexport const SelectedItemWrapper = () => {\r\n  const target = useSelector((state) => state.target.item);\r\n  const dispatch = useDispatch();\r\n\r\n  /* Function determains which button should be rendered \r\n     upon the payload sent to the state as a strig      */\r\n\r\n  const handleAddButton = () => (\r\n    <div className=\"buttonWrapper\">\r\n      {target.hasOwnProperty(\"engine\") && (\r\n        <button\r\n          onClick={() =>\r\n            dispatch({\r\n              type: CLICKED,\r\n              payload: \"addOperation\",\r\n            })\r\n          }\r\n        >\r\n          Add Operation\r\n        </button>\r\n      )}\r\n\r\n      {target.hasOwnProperty(\"address\") && (\r\n        <button\r\n          onClick={() =>\r\n            dispatch({\r\n              type: CLICKED,\r\n              payload: \"addCar\",\r\n            })\r\n          }\r\n        >\r\n          Add Car\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"details\">\r\n      {Object.keys(target).length === 0 && (\r\n        <div className=\"logo\">\r\n          <FontAwesomeIcon icon={faLaravel} />\r\n        </div>\r\n      )}\r\n      {Object.keys(target).length > 0 && <GetSelectedItem target={target} />}\r\n      {handleAddButton()}\r\n    </div>\r\n  );\r\n};\r\n","import Axios from \"axios\";\r\n\r\n// Auth Helpers\r\n\r\nexport const helpFetchMe = async (config) =>\r\n  await Axios.get('http://localhost:5000/api/auth/me', config);\r\n\r\nexport const helpRegisterUser = async (body, config) =>\r\n  await Axios.post(\"http://localhost:5000/api/auth/register\", body, config);\r\n\r\nexport const helpLoginUser = async (body, config) =>\r\n  await Axios.post(\"http://localhost:5000/api/auth/login\", body, config);\r\n\r\n// Clients Helpers\r\n\r\nexport const helpFetchClients = async () =>\r\n  await Axios.get(\"http://localhost:5000/api/clients\");\r\n\r\nexport const helpAddClient = async (body, config) =>\r\n  await Axios.post(\"http://localhost:5000/api/clients/add\", body, config);\r\n\r\nexport const helpDeleteClient = async (_id) =>\r\n  await Axios.delete(`http://localhost:5000/api/clients/delete/${_id}`);\r\n\r\nexport const helpEditClient = async (client) =>\r\n  await Axios.patch(\r\n    `http://localhost:5000/api/clients/update/${client._id}`,\r\n    client\r\n  );\r\n\r\n// Cars Helpers\r\n\r\nexport const helpFetchCars = async () =>\r\n  await Axios.get(\"http://localhost:5000/api/cars\");\r\n\r\nexport const helpAddCar = async (body, config) =>\r\n  await Axios.post(\"http://localhost:5000/api/cars/add\", body, config);\r\n\r\nexport const helpDeleteCar = async (id) =>\r\n  await Axios.delete(`http://localhost:5000/api/cars/delete/${id}`);\r\n\r\nexport const helpEditCar = async (car) =>\r\n  await Axios.patch(`http://localhost:5000/api/cars/update/${car._id}`, car);\r\n\r\n// Operations Helpers\r\n\r\nexport const helpFetchOperations = async () =>\r\n  await Axios.get(\"http://localhost:5000/api/operations\");\r\n\r\nexport const helpAddOperation = async (body, config) =>\r\n  await Axios.post(\"http://localhost:5000/api/operations/add\", body, config);\r\n\r\nexport const helpDeleteOperation = async (id) =>\r\n  await Axios.delete(`http://localhost:5000/api/operations/delete/${id}`);\r\n\r\nexport const helpEditOperation = async (operation) =>\r\n  await Axios.patch(\r\n    `http://localhost:5000/api/operations/update/${operation._id}`,\r\n    operation\r\n  );\r\n","import { helpAddCar, helpEditCar, helpFetchCars } from \"../helpers\";\r\nimport { GET_CARS, ADD_CAR_SUCCESS, EDIT_CAR } from \"./types\";\r\n\r\nexport const fetchCarsAction = () => async (dispatch) => {\r\n  const response = await helpFetchCars();\r\n  dispatch({\r\n    type: GET_CARS,\r\n    payload: response.data,\r\n  });\r\n};\r\n\r\nexport const addCarAction = (newCar) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(newCar);\r\n\r\n  try {\r\n    const response = await helpAddCar(body, config);\r\n    dispatch({\r\n      type: ADD_CAR_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const editCarAction = (car) => async (dispatch) => {\r\n  try {\r\n    const response = await helpEditCar(car);\r\n    dispatch({\r\n      type: EDIT_CAR,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchCarsAction } from \"../../store/actions/carsActions\";\r\nimport { CLICKED, DELETE_CAR, SET_TARGET } from \"../../store/actions/types\";\r\nimport { faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { v4 as id } from \"uuid\";\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\nexport const CarsList = (props) => {\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n\r\n  const classes = props.styles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const myCars = useSelector((state) => state.cars.carsArray);\r\n  const foundCar = useSelector((state) => state.cars.foundCars);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCarsAction());\r\n  }, [dispatch]);\r\n\r\n  const handleEditCar = (car) => {\r\n    dispatch({ type: SET_TARGET, payload: car });\r\n    dispatch({ type: CLICKED, payload: \"editCar\" });\r\n  };\r\n\r\n  const handleDeleteCar = (car) => {\r\n    if (window.confirm(`Are you sure you want to delete ${car.carModel} ?`)) {\r\n      return dispatch({ type: DELETE_CAR, payload: car._id });\r\n    }\r\n  };\r\n\r\n  const handleOnClickListItem = (car, index) => {\r\n    setSelectedIndex(index);\r\n    dispatch({ type: SET_TARGET, payload: car });\r\n    dispatch({ type: CLICKED, payload: \"\" });\r\n  };\r\n\r\n  const renderLists = () => {\r\n    let render;\r\n\r\n    foundCar.length > 0 ? (render = foundCar) : (render = myCars);\r\n    return render.map((car, index) => (\r\n      <div className=\"li-buttons-wrapper\" key={id()}>\r\n        <ListItem\r\n          button\r\n          className={classes.root}\r\n          selected={selectedIndex === index}\r\n          classes={{ selected: classes.selected }}\r\n          onClick={() => handleOnClickListItem(car, index)}\r\n        >\r\n          {car.carModel}\r\n        </ListItem>\r\n\r\n        <div>\r\n          <FontAwesomeIcon\r\n            className=\"icon\"\r\n            icon={faEdit}\r\n            onClick={() => handleEditCar(car)}\r\n          />\r\n\r\n          <FontAwesomeIcon\r\n            className=\"icon\"\r\n            icon={faTrash}\r\n            onClick={() => handleDeleteCar(car)}\r\n          />\r\n        </div>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"carsList\">\r\n      <div className=\"selected-item-header\">\r\n        <small>\r\n          {myCars.length > 0 ? \"All registered cars\" : \"No cars registered\"}\r\n        </small>\r\n      </div>\r\n      <ul>{renderLists()}</ul>\r\n    </div>\r\n  );\r\n};\r\n","import { helpAddClient, helpFetchClients, helpEditClient } from \"../helpers\";\r\nimport { ADD_CLIENT, EDIT_CLIENT, ERROR_MSG, GET_CLIENTS } from \"./types\";\r\n\r\nexport const fetchClientsAction = () => async (dispatch) => {\r\n  const response = await helpFetchClients();\r\n  dispatch({\r\n    type: GET_CLIENTS,\r\n    payload: response.data,\r\n  });\r\n};\r\n\r\nexport const addClientAction = (newClient) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify(newClient);\r\n  try {\r\n    const response = await helpAddClient(body, config);\r\n    dispatch({\r\n      type: ADD_CLIENT,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ERROR_MSG,\r\n      payload: error.response.data,\r\n    });\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const editClientAction = (client) => async (dispatch) => {\r\n  try {\r\n    const response = await helpEditClient(client);\r\n    dispatch({\r\n      type: EDIT_CLIENT,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { fetchClientsAction } from \"../../store/actions/clientsActions\";\r\nimport { CLICKED, DELETE_CLIENT, SET_TARGET } from \"../../store/actions/types\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\nexport const ClientsList = (props) => {\r\n  const classes = props.styles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n\r\n  const myClients = useSelector((state) => state.clients.clientsArray);\r\n  const foundClient = useSelector((state) => state.clients.foundClients);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchClientsAction());\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n\r\n  // }, [myClients]);\r\n\r\n  const handleEditClient = (client) => {\r\n    dispatch({ type: SET_TARGET, payload: client });\r\n    dispatch({ type: CLICKED, payload: \"editClient\" });\r\n  };\r\n\r\n  const handleDeleteClient = (client) => {\r\n    if (\r\n      window.confirm(`Are you sure you want to delete ${client.lastname} ?`)\r\n    ) {\r\n      return dispatch({ type: DELETE_CLIENT, payload: client._id });\r\n    }\r\n  };\r\n\r\n  const handleOnClickListItem = (client, index) => {\r\n    setSelectedIndex(index);\r\n    dispatch({ type: SET_TARGET, payload: client });\r\n    dispatch({ type: CLICKED, payload: \"\" });\r\n  };\r\n\r\n  const renderLists = () => {\r\n    let render;\r\n\r\n    foundClient.length > 0 ? (render = foundClient) : (render = myClients);\r\n    return render.map((client, index) => (\r\n      <div className=\"li-buttons-wrapper\" key={client._id}>\r\n        <ListItem\r\n          button\r\n          className={classes.root}\r\n          selected={selectedIndex === index}\r\n          classes={{ selected: classes.selected }}\r\n          onClick={() => handleOnClickListItem(client, index)}\r\n        >\r\n          {client.lastname[0].toUpperCase() + client.lastname.slice(1)}\r\n        </ListItem>\r\n        <div>\r\n          <FontAwesomeIcon\r\n            className=\"icon\"\r\n            icon={faEdit}\r\n            onClick={() => handleEditClient(client)}\r\n          />\r\n          <FontAwesomeIcon\r\n            className=\"icon\"\r\n            icon={faTrash}\r\n            onClick={() => handleDeleteClient(client)}\r\n          />\r\n        </div>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"clientsList\">\r\n      <div className=\"selected-item-header\">\r\n        <small>\r\n          {myClients.length > 0\r\n            ? \"All registered clients\"\r\n            : \"No clients registered\"}\r\n        </small>\r\n      </div>\r\n      <ul>{renderLists()}</ul>\r\n      <div className=\"buttonWrapper\">\r\n        <button\r\n          onClick={() =>\r\n            dispatch({\r\n              type: CLICKED,\r\n              payload: \"addClient\",\r\n            })\r\n          }\r\n        >\r\n          Add Client\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { v4 as id } from \"uuid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { fetchOperationsAction } from \"../../store/actions/operationsAction\";\r\nimport {\r\n  CLICKED,\r\n  DELETE_OPERATION,\r\n  SET_TARGET,\r\n} from \"../../store/actions/types\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\nexport const OperationsList = (props) => {\r\n  const { styles, Transition } = props;\r\n  const classes = styles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n\r\n  const allOperations = useSelector(\r\n    (state) => state.operations.operationsArray\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchOperationsAction());\r\n  }, [dispatch]);\r\n\r\n  const handleEditOperation = (operation) => {\r\n    dispatch({ type: SET_TARGET, payload: operation });\r\n    dispatch({ type: CLICKED, payload: \"editOperation\" });\r\n  };\r\n\r\n  const handleDeleteOperation = (operation) => {\r\n    if (window.confirm(`Are you sure you want to delete ${operation.name} ?`)) {\r\n      return dispatch({ type: DELETE_OPERATION, payload: operation._id });\r\n    }\r\n  };\r\n\r\n  const handleOnClickListItem = (operation, index) => {\r\n    setSelectedIndex(index);\r\n    dispatch({ type: SET_TARGET, payload: operation });\r\n    dispatch({ type: CLICKED, payload: \"\" });\r\n  };\r\n\r\n  const renderList = () => {\r\n    return allOperations.map((operation, index) => (\r\n      <div className=\"li-buttons-wrapper\" key={id()}>\r\n        <ListItem\r\n          button\r\n          className={classes.root}\r\n          selected={selectedIndex === index}\r\n          classes={{ selected: classes.selected }}\r\n          onClick={() => handleOnClickListItem(operation, index)}\r\n        >\r\n          {operation.name}\r\n        </ListItem>\r\n\r\n        <div>\r\n          <FontAwesomeIcon\r\n            className=\"icon\"\r\n            icon={faEdit}\r\n            onClick={() => handleEditOperation(operation)}\r\n          />\r\n\r\n          <FontAwesomeIcon\r\n            className=\"icon\"\r\n            icon={faTrash}\r\n            onClick={() => handleDeleteOperation(operation)}\r\n          />\r\n        </div>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"operationInfos\">\r\n      <div className=\"selected-item-header\">\r\n        <small>\r\n          {allOperations.length > 0\r\n            ? \"All registered operations\"\r\n            : \"No operations registered\"}\r\n        </small>\r\n      </div>\r\n      <ul>{renderList()}</ul>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  helpAddOperation,\r\n  helpEditOperation,\r\n  helpFetchOperations,\r\n} from \"../helpers\";\r\nimport { ADD_OPERATION_SUCCESS, EDIT_OPERATION, GET_OPERATIONS } from \"./types\";\r\n\r\nexport const fetchOperationsAction = () => async (dispatch) => {\r\n  const response = await helpFetchOperations();\r\n  dispatch({\r\n    type: GET_OPERATIONS,\r\n    payload: response.data,\r\n  });\r\n};\r\n\r\nexport const addOperationAction = (newOperation) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(newOperation);\r\n\r\n  try {\r\n    const response = await helpAddOperation(body, config);\r\n    dispatch({\r\n      type: ADD_OPERATION_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const editOperationAction = (operation) => async (dispatch) => {\r\n  try {\r\n    const response = await helpEditOperation(operation);\r\n    dispatch({\r\n      type: EDIT_OPERATION,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { CarsList } from \"./CarsList\";\r\nimport { ClientsList } from \"./ClientsList\";\r\nimport { OperationsList } from \"./OperationsList\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const ListsWrapper = () => {\r\n  const styles = makeStyles(() => ({\r\n    root: {\r\n      maxWidth: \"100%\",\r\n      borderRadius: \"1rem\",\r\n    },\r\n    selected: {\r\n      color: \"#e74c3c\",\r\n      background: \"#e74c3c\",\r\n    },\r\n  }));\r\n\r\n  const clickedTab = useSelector((state) => state.target.clickedTab);\r\n\r\n  return (\r\n    <div className=\"lists\">\r\n      {clickedTab === \"clientsList\" && <ClientsList styles={styles} />}\r\n      {clickedTab === \"carsList\" && <CarsList styles={styles} />}\r\n      {clickedTab === \"operationsList\" && <OperationsList styles={styles} />}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addCarAction } from \"../../store/actions/carsActions\";\r\nimport { CLICKED } from \"../../store/actions/types\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport const RegisterCar = (props) => {\r\n  const { handleSubmit, register, errors } = useForm();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const ownerId = useSelector((state) => state.target.item._id);\r\n\r\n  const onSubmitForm = (data) => {\r\n    dispatch(addCarAction(data));\r\n    dispatch({ type: CLICKED, payload: \"\" });\r\n  };\r\n\r\n  const { icons, Transition } = props;\r\n  const { pageStyle, pageVariants, pageTransition } = Transition;\r\n  return (\r\n    <motion.div\r\n      style={pageStyle}\r\n      initial=\"out\"\r\n      animate=\"in\"\r\n      exit=\"out\"\r\n      variants={pageVariants}\r\n      transition={pageTransition}\r\n      className=\"container\"\r\n    >\r\n      <div className=\"header\">\r\n        <small>Register new car</small>\r\n        <small\r\n          className=\"close\"\r\n          onClick={() => dispatch({ type: CLICKED, payload: \"\" })}\r\n        >\r\n          x\r\n        </small>\r\n      </div>\r\n      <form className=\"carsForm\" onSubmit={handleSubmit(onSubmitForm)}>\r\n        <div className=\"form-control success\">\r\n          <label htmlFor=\"ownerId\">Owner Id</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"ownerId\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"ownerId\"\r\n            defaultValue={ownerId}\r\n            ref={register({\r\n              required: true,\r\n              minLength: 2,\r\n            })}\r\n          />\r\n          {icons()}\r\n          <small>At least 2 characters long!</small>\r\n        </div>\r\n\r\n        <div className=\"form-control error\">\r\n          <label htmlFor=\"carModel\">Car Model</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"carModel\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"Car Model\"\r\n            ref={register({\r\n              required: true,\r\n              minLength: 2,\r\n            })}\r\n          />\r\n          {icons()}\r\n          <small>At least 2 characters long!</small>\r\n        </div>\r\n\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"carModelType\">Model Type</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"carModelType\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"Car model type\"\r\n            ref={register({\r\n              required: true,\r\n              minLength: 2,\r\n            })}\r\n          />\r\n          {icons()}\r\n          <small>At least 2 characters long!</small>\r\n        </div>\r\n\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"chassyNr\">Chassy number</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"chassyNr\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"Chassy Nr\"\r\n            ref={register({\r\n              required: true,\r\n              minLength: 2,\r\n            })}\r\n          />\r\n          {icons()}\r\n          <small>At least 2 characters long!</small>\r\n        </div>\r\n\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"engine\">Engine</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"engine\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"engine\"\r\n            ref={register({\r\n              required: true,\r\n              minLength: 2,\r\n            })}\r\n          />\r\n          {icons()}\r\n          <small>At least 2 characters long!</small>\r\n        </div>\r\n\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"plateNr\">Plate Number</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"plateNr\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"Plate Number\"\r\n            ref={register({\r\n              required: true,\r\n              // pattern: {\r\n              //   value: /^[A-ZÄÖÜ]{1,3}/i,\r\n              //   message: \"invalid plate number\",\r\n              // },\r\n            })}\r\n          />\r\n          {icons()}\r\n          <small>At least 2 characters long!</small>\r\n        </div>\r\n\r\n        <div className=\"buttonWrapper\">\r\n          <button type=\"submit\">SUBMIT</button>\r\n        </div>\r\n      </form>\r\n    </motion.div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { addClientAction } from \"../../store/actions/clientsActions\";\r\nimport { CLICKED } from \"../../store/actions/types\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport const RegisterClient = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { handleSubmit, register, errors } = useForm();\r\n\r\n  const onSubmitForm = (data) => {\r\n    dispatch(addClientAction(data));\r\n    dispatch({ type: CLICKED, payload: \"\" });\r\n  };\r\n\r\n  const { icons, Transition } = props;\r\n  const { pageStyle, pageVariants, pageTransition } = Transition;\r\n\r\n  return (\r\n    <motion.div\r\n      style={pageStyle}\r\n      initial=\"out\"\r\n      animate=\"in\"\r\n      exit=\"out\"\r\n      variants={pageVariants}\r\n      transition={pageTransition}\r\n      className=\"container\"\r\n    >\r\n      <div className=\"header\">\r\n        <small>Register new client</small>\r\n        <small\r\n          className=\"close\"\r\n          onClick={() => dispatch({ type: CLICKED, payload: \"\" })}\r\n        >\r\n          x\r\n        </small>\r\n      </div>\r\n      <form onSubmit={handleSubmit(onSubmitForm)}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"firstname\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstname\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"First Name\"\r\n            ref={register({\r\n              required: true,\r\n              minLength: 2,\r\n            })}\r\n          />\r\n          {icons()}\r\n          <small>At least 2 characters long!</small>\r\n        </div>\r\n\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"lastname\">Last Name</label>\r\n          <input\r\n            id=\"lastname\"\r\n            type=\"text\"\r\n            name=\"lastname\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"Last Name\"\r\n            ref={register({\r\n              required: true,\r\n              minLength: 2,\r\n            })}\r\n          />\r\n          {icons()}\r\n          <small>At least 2 characters long!</small>\r\n        </div>\r\n\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"address\">Address</label>\r\n          <input\r\n            id=\"address\"\r\n            type=\"text\"\r\n            name=\"address\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"Address\"\r\n            ref={register({\r\n              required: true,\r\n              minLength: 8,\r\n            })}\r\n          />\r\n          {icons()}\r\n          <small>At least 2 characters long!</small>\r\n        </div>\r\n\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"birthdate\">Birthday</label>\r\n          <input\r\n            id=\"birthday\"\r\n            type=\"date\"\r\n            name=\"birthdate\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"Date of birth\"\r\n            ref={register({\r\n              minLength: 8,\r\n            })}\r\n          />\r\n          {icons()}\r\n          <small>At least 2 characters long!</small>\r\n        </div>\r\n\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"Email\"\r\n            ref={register({\r\n              required: true,\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                message: \"Invalid Email Address!\",\r\n              },\r\n            })}\r\n          />\r\n          {icons()}\r\n          <small>At least 2 characters long!</small>\r\n        </div>\r\n\r\n        {/* {error && <p className=\"form-error\" style={{ textAlign: \"center\" }}>{error}</p>}\r\n            {errorMsg && <p className=\"form-error\" style={{ textAlign: \"center\" }}>{errorMsg}</p>} */}\r\n\r\n        <button className=\"btn\" type=\"submit\">\r\n          SUBMIT\r\n        </button>\r\n      </form>\r\n    </motion.div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addOperationAction } from \"../../store/actions/operationsAction\";\r\nimport { CLICKED } from \"../../store/actions/types\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport const RegisterOperation = (props) => {\r\n  const { handleSubmit, register, errors } = useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  const carId = useSelector((state) => state.target.item._id);\r\n\r\n  const onSubmitForm = (data) => {\r\n    dispatch(addOperationAction(data));\r\n    dispatch({ type: CLICKED, payload: \"\" });\r\n  };\r\n\r\n  const { icons, Transition } = props;\r\n  const { pageStyle, pageVariants, pageTransition } = Transition;\r\n\r\n  return (\r\n    <motion.div\r\n      style={pageStyle}\r\n      initial=\"out\"\r\n      animate=\"in\"\r\n      exit=\"out\"\r\n      variants={pageVariants}\r\n      transition={pageTransition}\r\n      className=\"container\"\r\n    >\r\n      <div className=\"header\">\r\n        <small>Register new operation</small>\r\n        <small\r\n          className=\"close\"\r\n          onClick={() => dispatch({ type: CLICKED, payload: \"\" })}\r\n        >\r\n          x\r\n        </small>\r\n      </div>\r\n      <form onSubmit={handleSubmit(onSubmitForm)}>\r\n        <div className=\"form-control success\">\r\n          <label htmlFor=\"carId\">Car Id</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"carId\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"Car Id\"\r\n            defaultValue={carId}\r\n            ref={register({\r\n              required: true,\r\n              minLength: 4,\r\n            })}\r\n          />\r\n          {icons()}\r\n          <small>At least 2 characters long!</small>\r\n        </div>\r\n\r\n        <div className=\"form-control error\">\r\n          <label htmlFor=\"name\">Operation Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"Operation Name\"\r\n            ref={register({\r\n              required: true,\r\n              minLength: 2,\r\n            })}\r\n          />\r\n          {icons()}\r\n          <small>At least 2 characters long!</small>\r\n        </div>\r\n\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"description\">Description</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"description\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"Description\"\r\n            ref={register({\r\n              required: true,\r\n              minLength: 2,\r\n            })}\r\n          />\r\n          {icons()}\r\n          <small>At least 2 characters long!</small>\r\n        </div>\r\n\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"Parts\">Parts</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"Parts\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"Parts\"\r\n            ref={register({\r\n              required: true,\r\n              minLength: 2,\r\n            })}\r\n          />\r\n          {icons()}\r\n          <small>At least 2 characters long!</small>\r\n        </div>\r\n\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"costs\">Costs</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"costs\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"Costs\"\r\n            ref={register({\r\n              required: true,\r\n              minLength: 2,\r\n            })}\r\n          />\r\n          {icons()}\r\n          <small>At least 2 characters long!</small>\r\n        </div>\r\n        <div className=\"buttonWrapper\">\r\n          <button type=\"submit\">SUBMIT</button>\r\n        </div>\r\n      </form>\r\n    </motion.div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { editClientAction } from \"../../store/actions/clientsActions\";\r\nimport { CLICKED, SET_TARGET } from \"../../store/actions/types\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport const EditClient = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { handleSubmit, register, errors } = useForm();\r\n\r\n  const client = useSelector((state) => state.target.item);\r\n\r\n  const { firstname, lastname, address, birthdate, email, _id } = client;\r\n\r\n  const onSubmitForm = (data) => {\r\n    const Obj = Object.assign({ _id }, data);\r\n    dispatch(editClientAction(Obj));\r\n    dispatch({ type: CLICKED, payload: \"\" });\r\n    dispatch({ type: SET_TARGET, payload: Obj });\r\n  };\r\n\r\n  const { Transition } = props;\r\n\r\n  const { pageStyle, pageVariants, pageTransition } = Transition;\r\n\r\n  return (\r\n    <motion.div\r\n      style={pageStyle}\r\n      initial=\"out\"\r\n      animate=\"in\"\r\n      exit=\"out\"\r\n      variants={pageVariants}\r\n      transition={pageTransition}\r\n      className=\"container\"\r\n    >\r\n      <div className=\"header\">\r\n        <small>\r\n          Update {client.firstname} {client.lastname}\r\n        </small>\r\n        <small\r\n          className=\"close\"\r\n          onClick={() => dispatch({ type: CLICKED, payload: \"\" })}\r\n        >\r\n          x\r\n        </small>\r\n      </div>\r\n      <form onSubmit={handleSubmit(onSubmitForm)}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"firstname\"></label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstname\"\r\n            defaultValue={firstname}\r\n            autoComplete=\"off\"\r\n            placeholder=\"First Name\"\r\n            ref={register({\r\n              required: true,\r\n              minLength: 2,\r\n            })}\r\n          />\r\n          {errors.name && (\r\n            <p className=\"form-error\">At least 2 characters long!</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"lastname\"></label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"lastname\"\r\n            defaultValue={lastname}\r\n            autoComplete=\"off\"\r\n            placeholder=\"Last Name\"\r\n            ref={register({\r\n              required: true,\r\n              minLength: 2,\r\n            })}\r\n          />\r\n          {errors.name && (\r\n            <p className=\"form-error\">At least 2 characters long!</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"address\"></label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"address\"\r\n            defaultValue={address}\r\n            autoComplete=\"off\"\r\n            placeholder=\"Address\"\r\n            ref={register({\r\n              required: true,\r\n              minLength: 8,\r\n            })}\r\n          />\r\n          {errors.name && (\r\n            <p className=\"form-error\">At least 8 characters long!</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"birthdate\"></label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"birthdate\"\r\n            defaultValue={birthdate}\r\n            autoComplete=\"off\"\r\n            placeholder=\"Date of birth\"\r\n            ref={register({\r\n              minLength: 8,\r\n            })}\r\n          />\r\n          {errors.name && (\r\n            <p className=\"form-error\">At least 8 characters long!</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"email\"></label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            defaultValue={email}\r\n            autoComplete=\"off\"\r\n            placeholder=\"Email\"\r\n            ref={register({\r\n              required: true,\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                message: \"Invalid Email Address!\",\r\n              },\r\n            })}\r\n          />\r\n          {errors.email && (\r\n            <p className=\"form-error\">Must enter a valid Email!</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* {error && <p className=\"form-error\" style={{ textAlign: \"center\" }}>{error}</p>}\r\n            {errorMsg && <p className=\"form-error\" style={{ textAlign: \"center\" }}>{errorMsg}</p>} */}\r\n        <div className=\"buttonWrapper\">\r\n          <button type=\"submit\">Update Client</button>\r\n        </div>\r\n      </form>\r\n    </motion.div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editCarAction } from \"../../store/actions/carsActions\";\nimport { CLICKED, SET_TARGET } from \"../../store/actions/types\";\nimport { motion } from \"framer-motion\";\n\nexport const EditCar = (props) => {\n  const dispatch = useDispatch();\n\n  const { handleSubmit, register, errors } = useForm();\n\n  const car = useSelector((state) => state.target.item);\n\n  const {\n    _id,\n    ownerId,\n    carModel,\n    carModelType,\n    chassyNr,\n    engine,\n    plateNr,\n  } = car;\n\n  const { Transition } = props;\n  const { pageStyle, pageVariants, pageTransition } = Transition;\n\n  const onSubmitForm = (data) => {\n    const Obj = Object.assign({ _id }, data);\n    dispatch(editCarAction(Obj));\n    dispatch({ type: CLICKED, payload: \"\" });\n    dispatch({ type: SET_TARGET, payload: Obj });\n  };\n\n  return (\n    <motion.div\n      style={pageStyle}\n      initial=\"out\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransition}\n      className=\"container\"\n    >\n      <div className=\"header\">\n        <small>Update {car.carModel}</small>\n        <small\n          className=\"close\"\n          onClick={() => dispatch({ type: CLICKED, payload: \"\" })}\n        >\n          x\n        </small>\n      </div>\n      <form onSubmit={handleSubmit(onSubmitForm)}>\n        <div className=\"form-control\">\n          <label htmlFor=\"ownerId\"></label>\n          <input\n            type=\"text\"\n            name=\"ownerId\"\n            autoComplete=\"off\"\n            placeholder=\"ownerId\"\n            defaultValue={ownerId}\n            ref={register({\n              required: true,\n              minLength: 2,\n            })}\n          />\n          {errors.name && (\n            <p className=\"form-error\">At least 2 characters long!</p>\n          )}\n        </div>\n\n        <div className=\"form-control\">\n          <label htmlFor=\"carModel\"></label>\n          <input\n            type=\"text\"\n            name=\"carModel\"\n            autoComplete=\"off\"\n            defaultValue={carModel}\n            placeholder=\"Car Model\"\n            ref={register({\n              required: true,\n              minLength: 2,\n            })}\n          />\n          {errors.name && (\n            <p className=\"form-error\">At least 2 characters long!</p>\n          )}\n        </div>\n\n        <div className=\"form-control\">\n          <label htmlFor=\"carModelType\"></label>\n          <input\n            type=\"text\"\n            name=\"carModelType\"\n            autoComplete=\"off\"\n            defaultValue={carModelType}\n            placeholder=\"Car model type\"\n            ref={register({\n              required: true,\n              minLength: 2,\n            })}\n          />\n          {errors.name && (\n            <p className=\"form-error\">At least 2 characters long!</p>\n          )}\n        </div>\n\n        <div className=\"form-control\">\n          <label htmlFor=\"chassyNr\"></label>\n          <input\n            type=\"text\"\n            name=\"chassyNr\"\n            defaultValue={chassyNr}\n            autoComplete=\"off\"\n            placeholder=\"Chassy Nr\"\n            ref={register({\n              required: true,\n              minLength: 2,\n            })}\n          />\n          {errors.name && (\n            <p className=\"form-error\">At least 2 characters long!</p>\n          )}\n        </div>\n\n        <div className=\"form-control\">\n          <label htmlFor=\"engine\"></label>\n          <input\n            type=\"text\"\n            name=\"engine\"\n            defaultValue={engine}\n            autoComplete=\"off\"\n            placeholder=\"engine\"\n            ref={register({\n              required: true,\n              minLength: 2,\n            })}\n          />\n          {errors.name && (\n            <p className=\"form-error\">At least 2 characters long!</p>\n          )}\n        </div>\n\n        <div className=\"form-control\">\n          <label htmlFor=\"plateNr\"></label>\n          <input\n            type=\"text\"\n            name=\"plateNr\"\n            defaultValue={plateNr}\n            autoComplete=\"off\"\n            placeholder=\"Plate Number\"\n            ref={register({\n              required: true,\n              minLength: 2,\n            })}\n          />\n          {errors.name && (\n            <p className=\"form-error\">At least 2 characters long!</p>\n          )}\n        </div>\n\n        <div className=\"buttonWrapper\">\n          <button type=\"submit\">Update Car</button>\n        </div>\n      </form>\n    </motion.div>\n  );\n};\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editOperationAction } from \"../../store/actions/operationsAction\";\nimport { CLICKED, SET_TARGET } from \"../../store/actions/types\";\nimport { motion } from \"framer-motion\";\n\nexport const EditOperation = (props) => {\n  const dispatch = useDispatch();\n\n  const { handleSubmit, register, errors } = useForm();\n\n  const operation = useSelector((state) => state.target.item);\n\n  const { _id, carId, name, description, parts, cost } = operation;\n\n  const onSubmitForm = (data) => {\n    const Obj = Object.assign({ _id }, data);\n    dispatch(editOperationAction(Obj));\n    dispatch({ type: CLICKED, payload: \"\" });\n    dispatch({ type: SET_TARGET, payload: Obj });\n  };\n\n  const { Transition } = props;\n  const { pageStyle, pageVariants, pageTransition } = Transition;\n  return (\n    <motion.div\n      style={pageStyle}\n      initial=\"out\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransition}\n      className=\"container\"\n    >\n      <div className=\"header\">\n        <small>Update {operation.name} operation</small>\n        <small\n          className=\"close\"\n          onClick={() => dispatch({ type: CLICKED, payload: \"\" })}\n        >\n          x\n        </small>\n      </div>\n      <form onSubmit={handleSubmit(onSubmitForm)}>\n        <div className=\"form-control\">\n          <label htmlFor=\"carId\"></label>\n          <input\n            type=\"text\"\n            name=\"carId\"\n            defaultValue={carId}\n            autoComplete=\"off\"\n            ref={register({\n              required: true,\n              minLength: 4,\n            })}\n          />\n          {errors.name && (\n            <p className=\"form-error\">At least 2 characters long!</p>\n          )}\n        </div>\n\n        <div className=\"form-control\">\n          <label htmlFor=\"name\"></label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            defaultValue={name}\n            autoComplete=\"off\"\n            placeholder=\"Operation Name\"\n            ref={register({\n              required: true,\n              minLength: 2,\n            })}\n          />\n          {errors.name && (\n            <p className=\"form-error\">At least 2 characters long!</p>\n          )}\n        </div>\n\n        <div className=\"form-control\">\n          <label htmlFor=\"description\"></label>\n          <input\n            type=\"text\"\n            name=\"description\"\n            defaultValue={description}\n            autoComplete=\"off\"\n            placeholder=\"Description\"\n            ref={register({\n              required: true,\n              minLength: 2,\n            })}\n          />\n          {errors.name && (\n            <p className=\"form-error\">At least 2 characters long!</p>\n          )}\n        </div>\n\n        <div className=\"form-control\">\n          <label htmlFor=\"Parts\"></label>\n          <input\n            type=\"text\"\n            name=\"Parts\"\n            defaultValue={parts}\n            autoComplete=\"off\"\n            placeholder=\"Parts\"\n            ref={register({\n              required: true,\n              minLength: 2,\n            })}\n          />\n          {errors.name && (\n            <p className=\"form-error\">At least 2 characters long!</p>\n          )}\n        </div>\n\n        <div className=\"form-control\">\n          <label htmlFor=\"costs\"></label>\n          <input\n            type=\"text\"\n            name=\"costs\"\n            defaultValue={cost}\n            autoComplete=\"off\"\n            placeholder=\"Costs\"\n            ref={register({\n              required: true,\n              minLength: 2,\n            })}\n          />\n          {errors.name && (\n            <p className=\"form-error\">At least 2 characters long!</p>\n          )}\n        </div>\n        <div className=\"buttonWrapper\">\n          <button type=\"submit\">Update Operation</button>\n        </div>\n      </form>\n    </motion.div>\n  );\n};\n","import React from \"react\";\nimport { v4 as id } from \"uuid\";\nimport { useSelector } from \"react-redux\";\n\nexport const TargetCar = () => {\n  const car = useSelector((state) => state.cars.car);\n  const client = useSelector((state) => state.target.item);\n  console.log(\"this one\", client);\n\n  const handleTargetCar = (car) => {\n    let listItems = [];\n    for (const [key, value] of Object.entries(car)) {\n      if (key !== \"ops\") {\n        listItems.push(\n          <li key={id()}>\n            {key\n              .split(/(?=[A-Z])/)\n              .join(\" \")[0]\n              .toUpperCase() + key.slice(1)}\n            : {value}\n          </li>\n        );\n      }\n    }\n    return listItems;\n  };\n\n  const handleOperations = (ops) => (\n    <select placeholder=\"Operations\">\n      {ops.map((op) => (\n        <option key={id()} value={op.name}>\n          {op.name}\n        </option>\n      ))}\n    </select>\n  );\n\n  let firstname = client.firstname[0].toUpperCase() + client.firstname.slice(1);\n  let lastname = client.lastname[0].toUpperCase() + client.lastname.slice(1);\n  let carModel = car[0].carModel[0].toUpperCase() + car[0].carModel.slice(1);\n\n  return (\n    <div className=\"targetCarWrapper\">\n      <div className=\"selected-item-header\">\n        <small>Car: {carModel}</small>\n        <small>\n          Owner: {firstname} {lastname}\n        </small>\n      </div>\n      <ul className=\"targetCarList\">{handleTargetCar(car[0])}</ul>\n      {car.ops && handleOperations(car.ops)}\n    </div>\n  );\n};\n","import React, { Fragment } from \"react\";\nimport { v4 as id } from \"uuid\";\nimport { useSelector } from \"react-redux\";\n\nexport const TargetOperation = () => {\n  const operation = useSelector((state) => state.operations.operation);\n  const car = useSelector((state) => state.target.item);\n\n  const handleTargetOperation = (operation) => {\n    let listItems = [];\n    for (const [key, value] of Object.entries(operation)) {\n      listItems.push(\n        <li key={id()}>\n          {key\n            .split(/(?=[A-Z])/)\n            .join(\" \")[0]\n            .toUpperCase() + key.slice(1)}\n          : {value}\n        </li>\n      );\n    }\n    return listItems;\n  };\n\n  return (\n    <Fragment>\n      <div className=\"targetOperationWrapper\">\n        <div className=\"selected-item-header\">\n          <small>\n            Operations on{\" \"}\n            {car.carModel[0].toUpperCase() + car.carModel.slice(1)}\n          </small>\n        </div>\n        <ul className=\"targetOperationList\">\n          {handleTargetOperation(operation[0])}\n        </ul>\n      </div>\n    </Fragment>\n  );\n};\n","import React from \"react\";\r\nimport { RegisterCar } from \"./RegisterCar\";\r\nimport { RegisterClient } from \"./RegisterClient\";\r\nimport { RegisterOperation } from \"./RegisterOperation\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { EditClient } from \"./EditClient\";\r\nimport { EditCar } from \"./EditCar\";\r\nimport { EditOperation } from \"./EditOperation\";\r\nimport { TargetCar } from \"./TargetCar\";\r\nimport { TargetOperation } from \"./TargetOperation\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCheckCircle,\r\n  faExclamationCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const FormsWrapper = () => {\r\n  const isClicked = useSelector((state) => state.target.isClicked);\r\n  const Transition = {\r\n    pageVariants: {\r\n      initial: {\r\n        opacity: 0,\r\n        x: \"-100vw\",\r\n        scale: 0.8,\r\n      },\r\n      in: {\r\n        opacity: 1,\r\n        x: 0,\r\n        scale: 1,\r\n      },\r\n      out: {\r\n        opacity: 0,\r\n        x: \"100vw\",\r\n        scale: 1.2,\r\n      },\r\n    },\r\n    pageTransition: {\r\n      type: \"tween\",\r\n      ease: \"anticipate\",\r\n      duration: 1,\r\n    },\r\n    pageStyle: {\r\n      position: \"absolute\",\r\n    },\r\n  };\r\n\r\n  const icons = () => {\r\n    return (\r\n      <div>\r\n        <FontAwesomeIcon className=\"fas fa-check-circle\" icon={faCheckCircle} />\r\n        <FontAwesomeIcon\r\n          className=\"fas fa-exclamation-circle\"\r\n          icon={faExclamationCircle}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"registrationForms\">\r\n      {isClicked === \"\" && <div className=\"logo\">AUTOMOBUS</div>}\r\n\r\n      {isClicked === \"editCar\" && <EditCar Transition={Transition} />}\r\n\r\n      {isClicked === \"addCar\" && (\r\n        <RegisterCar icons={icons} Transition={Transition} />\r\n      )}\r\n\r\n      {isClicked === \"editClient\" && <EditClient Transition={Transition} />}\r\n\r\n      {isClicked === \"addClient\" && (\r\n        <RegisterClient icons={icons} Transition={Transition} />\r\n      )}\r\n\r\n      {isClicked === \"editOperation\" && (\r\n        <EditOperation Transition={Transition} />\r\n      )}\r\n\r\n      {isClicked === \"addOperation\" && (\r\n        <RegisterOperation icons={icons} Transition={Transition} />\r\n      )}\r\n\r\n      {isClicked === \"targetCar\" && <TargetCar Transition={Transition} />}\r\n\r\n      {isClicked === \"targetOperation\" && (\r\n        <TargetOperation Transition={Transition} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { SelectedItemWrapper } from \"./selectedItems/SelectedItemWrapper\";\r\nimport { ListsWrapper } from \"./listsOfData/ListsWrapper\";\r\nimport { FormsWrapper } from \"./forms/FormsWrapper\";\r\n\r\nexport const Content = () => {\r\n  return (\r\n    <section className=\"content\">\r\n      <ListsWrapper />\r\n      <SelectedItemWrapper />\r\n      <FormsWrapper />\r\n    </section>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFacebook, faInstagram } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faAt } from \"@fortawesome/free-solid-svg-icons\";\r\nexport const Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <section>\r\n        <FontAwesomeIcon icon={faInstagram} />\r\n        <FontAwesomeIcon icon={faFacebook} />\r\n        <FontAwesomeIcon icon={faAt} />\r\n      </section>\r\n      <small>Copyright © 2020 Automobus.</small>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { CLICKED } from \"../../store/actions/types\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { faLaravel } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport const NavBar = () => {\n  const dispatch = useDispatch();\n\n  const onSignUp = () => {\n    dispatch({\n      type: CLICKED,\n      payload: \"signUpClicked\",\n    });\n  };\n\n  return (\n    <div className=\"landing-pag-nav-bar\">\n      <div className=\"logo\">\n        <FontAwesomeIcon icon={faLaravel} />\n        <small>AUTOMOBUS</small>\n      </div>\n      <div className=\"setting\">\n        <li\n          onClick={() =>\n            dispatch({\n              type: CLICKED,\n              payload: \"AboutTabClicked\",\n            })\n          }\n        >\n          ABOUT\n        </li>\n        <li>PRICING</li>\n        <li onClick={onSignUp}>SIGN UP</li>\n        <FontAwesomeIcon icon={faBars} />\n      </div>\n    </div>\n  );\n};\n","import { helpRegisterUser } from \"../helpers/index\";\r\nimport { helpLoginUser } from \"../helpers/index\";\r\nimport { helpFetchMe } from \"../helpers/index\";\r\nimport { fetchClientsAction } from \"./clientsActions\";\r\nimport { fetchCarsAction } from \"./carsActions\";\r\nimport {\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT_SUCCESS,\r\n  USER_LOADING,\r\n} from \"./types\";\r\n\r\nexport const loadUser = () => async (dispatch, getState) => {\r\n  dispatch({ type: USER_LOADING });\r\n\r\n  const token = getState().auth.token || localStorage.getItem(\"auth-token\");\r\n  if (token) {\r\n    try {\r\n      const response = await helpFetchMe(tokenConfig(token));\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: response.data,\r\n      });\r\n\r\n      dispatch(fetchClientsAction()); // is it best practice to dispatch these actions here and on login ??\r\n      dispatch(fetchCarsAction());\r\n    } catch (error) {\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const registerAction = (registerData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(registerData);\r\n\r\n  try {\r\n    const response = await helpRegisterUser(body, config);\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const loginAction = (loginData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(loginData);\r\n\r\n  try {\r\n    const response = await helpLoginUser(body, config);\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n\r\n    dispatch(fetchClientsAction());\r\n    dispatch(fetchCarsAction());\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => {\r\n  return { type: LOGOUT_SUCCESS }; // we return instead of dispatch because its logout sync\r\n};\r\n\r\n// setup config/headers and token\r\nexport const tokenConfig = (token) => {\r\n  // shouldnt we provide token here ? do we even need this ?\r\n  const config = {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  if (token) {\r\n    config.headers[\"auth-token\"] = token; // try this on other objs\r\n  }\r\n  return config;\r\n};\r\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { useDispatch } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { CLICKED } from \"../../store/actions/types\";\nimport { registerAction } from \"../../store/actions/authActions\";\n\nexport const SignUpForm = (props) => {\n  const dispatch = useDispatch();\n  const { register, handleSubmit, errors } = useForm();\n  const { pageStyle, pageVariants, pageTransition } = props.Transition;\n\n  const onSignUp = (data) => {\n    console.log(data);\n    dispatch(registerAction(data));\n  };\n\n  return (\n    <motion.div\n      style={pageStyle}\n      initial=\"out\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransition}\n      className=\"login-form\"\n    >\n      <strong>PLEASE SIGN UP</strong>\n      <form onSubmit={handleSubmit(onSignUp)}>\n        <div>\n          <input type=\"text\" name=\"name\" placeholder=\"Name\" ref={register} />\n          {errors.lastname && <div>{errors.lastname.message}</div>}\n        </div>\n        <div>\n          <input type=\"text\" name=\"email\" placeholder=\"Email\" ref={register} />\n          {errors.email && <div>{errors.email.message}</div>}\n        </div>\n        <div>\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            ref={register}\n          />\n          {errors.password && <div>{errors.password.message}</div>}\n        </div>\n        <input className=\"submit-button\" type=\"submit\" value=\"SIGN UP\" />\n      </form>\n      <div className=\"forgot-password\">\n        <p></p>\n        <p>\n          Already have an account?{\" \"}\n          <span onClick={() => dispatch({ type: CLICKED, payload: \"\" })}>\n            Login\n          </span>\n        </p>\n      </div>\n    </motion.div>\n  );\n};\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { useDispatch } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { CLICKED } from \"../../store/actions/types\";\nimport { loginAction } from \"../../store/actions/authActions\";\n\nexport const SignInForm = (props) => {\n  const dispatch = useDispatch();\n  const { register, handleSubmit, errors } = useForm();\n  const { pageStyle, pageVariants, pageTransition } = props.Transition;\n\n  const onSignIn = (data) => {\n    console.log(data);\n    let registerData = {\n      email: data.email,\n      password: data.password,\n    };\n\n    dispatch(loginAction(registerData));\n  };\n\n  const onSignUp = () => {\n    dispatch({\n      type: CLICKED,\n      payload: \"signUpClicked\",\n    });\n  };\n\n  return (\n    <motion.div\n      style={pageStyle}\n      initial=\"out\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransition}\n      className=\"login-form\"\n    >\n      <strong>PLEASE SIGN IN</strong>\n      <form onSubmit={handleSubmit(onSignIn)}>\n        <div>\n          <input type=\"text\" name=\"email\" placeholder=\"Email\" ref={register} />\n          {errors.email && <div>{errors.email.message}</div>}\n        </div>\n        <div>\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            ref={register}\n          />\n          {errors.password && <div>{errors.password.message}</div>}\n        </div>\n        <input className=\"submit-button\" type=\"submit\" value=\"LOGIN\" />\n      </form>\n      <div className=\"forgot-password\">\n        <p>Forgot password?</p>\n        <p>\n          Don't have an account? <span onClick={onSignUp}>Join Now</span>\n        </p>\n      </div>\n    </motion.div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\n\nexport const About = () => {\n  const [Transition] = useState({\n    pageVariants: {\n      initial: {\n        opacity: 0,\n        y: \"-100vw\",\n        scale: 0.8,\n      },\n      in: {\n        opacity: 1,\n        x: 0,\n        scale: 1,\n      },\n      out: {\n        opacity: 0,\n        x: \"100vw\",\n        scale: 1.2,\n      },\n    },\n    pageTransition: {\n      type: \"tween\",\n      ease: \"anticipate\",\n      duration: 1,\n    },\n    pageStyle: {\n      position: \"absolute\",\n    },\n  });\n\n  const { pageStyle, pageVariants, pageTransition } = Transition;\n\n  return (\n    <motion.div\n      style={pageStyle}\n      initial=\"out\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransition}\n      className=\"about-page\"\n    >\n      <strong> What exactly do we offer? </strong>\n      <p>\n        With our software you can quickly and easily call up and record all\n        information about your customers and their vehicles. such as create\n        customer with vehicle, as well as registiring operation for each\n        vehicle. This data can be adopted at any time with just one click. With\n        our master data management software you always know when and what has\n        been done on the vehicles.\n      </p>\n    </motion.div>\n  );\n};\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { faLaravel } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { Footer } from \"../footer\";\r\nimport { NavBar } from \"./NavBar\";\r\nimport { SignUpForm } from \"./SignUpForm\";\r\nimport { SignInForm } from \"./SignInForm\";\r\nimport { About } from \"./About\";\r\n\r\nexport const Landing = () => {\r\n  const [Transition] = useState({\r\n    pageVariants: {\r\n      in: {\r\n        opacity: 1,\r\n        scale: 1,\r\n      },\r\n      out: {\r\n        opacity: 0,\r\n        scale: 1,\r\n      },\r\n    },\r\n    pageTransition: {\r\n      type: \"tween\",\r\n      ease: \"anticipate\",\r\n      duration: 1,\r\n    },\r\n    pageStyle: {\r\n      position: \"absolute\",\r\n    },\r\n  });\r\n  const loginHeader = () => (\r\n    <div className=\"login-header\">\r\n      <div>\r\n        <FontAwesomeIcon icon={faLaravel} />\r\n        <strong>AUTOMOBUS</strong>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const isClicked = useSelector((state) => state.target.isClicked);\r\n\r\n  return (\r\n    <div className=\"landing-page\">\r\n      <NavBar />\r\n      <div className=\"landing-content\">\r\n        {loginHeader()}\r\n\r\n        {isClicked === \"signUpClicked\" ? (\r\n          <SignUpForm Transition={Transition} />\r\n        ) : isClicked === \"AboutTabClicked\" ? (\r\n          <About />\r\n        ) : (\r\n          <SignInForm Transition={Transition} />\r\n        )}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { faLaravel } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  TAB_CLICKED,\r\n  FIND_CLIENTS,\r\n  FIND_CARS,\r\n  LOGOUT_SUCCESS,\r\n} from \"../store/actions/types\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    maxWidth: \"30%\",\r\n    borderRadius: \"1rem\",\r\n  },\r\n  selected: {\r\n    color: \"#e74c3c\",\r\n  },\r\n}));\r\n\r\nexport const NavBar = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [input, setInput] = useState(\"\");\r\n  const [search, setSearch] = useState(\"client\");\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n\r\n  /* Functions determines the selected Tab in the navbar*/\r\n\r\n  const clientsList = () => {\r\n    setSelectedIndex(0);\r\n    dispatch({\r\n      type: TAB_CLICKED,\r\n      payload: \"clientsList\",\r\n    });\r\n\r\n    dispatch({\r\n      type: FIND_CLIENTS,\r\n      payload: \"\",\r\n    });\r\n  };\r\n\r\n  const carsList = () => {\r\n    setSelectedIndex(1);\r\n    dispatch({\r\n      type: TAB_CLICKED,\r\n      payload: \"carsList\",\r\n    });\r\n    dispatch({\r\n      type: FIND_CARS,\r\n      payload: \"\",\r\n    });\r\n  };\r\n\r\n  const operationsList = () => {\r\n    setSelectedIndex(2);\r\n    dispatch({\r\n      type: TAB_CLICKED,\r\n      payload: \"operationsList\",\r\n    });\r\n  };\r\n\r\n  // Handling search bar _______________________________________\r\n\r\n  let myClients = useSelector((state) => state.clients.clientsArray);\r\n  let myCars = useSelector((state) => state.cars.carsArray);\r\n\r\n  const handleInputOnChange = (e) => {\r\n    e.preventDefault();\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  if (input.length > 0) {\r\n    if (search === \"client\") {\r\n      let foundClients = myClients.filter(\r\n        (client) => client.lastname.toLowerCase() === input\r\n      );\r\n\r\n      dispatch({\r\n        type: FIND_CLIENTS,\r\n        payload: foundClients,\r\n      });\r\n    } else {\r\n      let foundCars = myCars.filter((car) =>\r\n        car.carModel.toLowerCase().match(input)\r\n      );\r\n\r\n      dispatch({\r\n        type: FIND_CARS,\r\n        payload: foundCars,\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleSelectOnChange = (e) => {\r\n    e.preventDefault();\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const placeHolder = () => {\r\n    return search === \"client\"\r\n      ? \"Enter Client Name\"\r\n      : search === \"car\"\r\n      ? \"Enter Car Model\"\r\n      : \"Enter Operation Name\";\r\n  };\r\n\r\n  // Set first letter of first and seconde name of registered user in the navBar\r\n  // const userName = useSelector((state) => state.auth.user);\r\n\r\n  // const userIcon = () => {\r\n  //   let matches = userName.name.match(/\\b(\\w)/g).join(\"\");\r\n  //   let firstLetter = matches[0].toUpperCase();\r\n  //   let secondeLetter = matches[1].toUpperCase();\r\n  //   let icon = firstLetter + secondeLetter;\r\n  //   return;\r\n  // };\r\n\r\n  return (\r\n    <div className=\"navBar\">\r\n      <div className=\"all\">\r\n        <div className=\"logo\">\r\n          <FontAwesomeIcon icon={faLaravel} />\r\n          <small>AUTOMOBUS</small>\r\n        </div>\r\n\r\n        <List className=\"taps\">\r\n          <ListItem\r\n            button\r\n            onClick={clientsList}\r\n            className={classes.root}\r\n            selected={selectedIndex === 0}\r\n            classes={{ selected: classes.selected }}\r\n          >\r\n            Clients\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            onClick={carsList}\r\n            className={classes.root}\r\n            selected={selectedIndex === 1}\r\n            classes={{ selected: classes.selected }}\r\n          >\r\n            Cars\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            onClick={operationsList}\r\n            className={classes.root}\r\n            selected={selectedIndex === 2}\r\n            classes={{ selected: classes.selected }}\r\n          >\r\n            Operations\r\n          </ListItem>\r\n        </List>\r\n\r\n        <div className=\"searchBarHolder\">\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={handleInputOnChange}\r\n            placeholder={placeHolder()}\r\n          />\r\n\r\n          <select onChange={handleSelectOnChange}>\r\n            <option value=\"client\">Client</option>\r\n            <option value=\"car\">Car</option>\r\n            <option value=\"operation\">Operation</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className=\"setting\">\r\n        <div>FA</div>\r\n        <span\r\n          onClick={() =>\r\n            dispatch({\r\n              type: LOGOUT_SUCCESS,\r\n              payload: \"\",\r\n            })\r\n          }\r\n        >\r\n          Log out\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Content } from \"./components/content\";\r\nimport { Footer } from \"./components/footer\";\r\nimport { Landing } from \"./components/landingPage/Landing\";\r\nimport { NavBar } from \"./components/NavBar\";\r\nimport { loadUser } from \"./store/actions/authActions\";\r\n\r\nconst App = () => {\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadUser());\r\n  }, [dispatch]);\r\n\r\n  return isAuthenticated ? (\r\n    <div className=\"container\">\r\n      <NavBar />\r\n      <Content />\r\n      <Footer />\r\n    </div>\r\n  ) : (\r\n    <Landing />\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import {\r\n  GET_CLIENTS,\r\n  DELETE_CLIENT,\r\n  EDIT_CLIENT,\r\n  FIND_CLIENTS,\r\n  ERROR_MSG,\r\n  ADD_CLIENT,\r\n} from \"../actions/types\";\r\nimport { helpDeleteClient, helpEditClient } from \"../helpers\";\r\n\r\nconst initialState = {\r\n  clientsArray: [],\r\n  foundClients: [],\r\n  client: {},\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst clientsReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_CLIENTS:\r\n      return {\r\n        ...state,\r\n        clientsArray: payload,\r\n      };\r\n\r\n    case ADD_CLIENT:\r\n      return {\r\n        ...state,\r\n        clientsArray: [payload, ...state.clientsArray],\r\n      };\r\n\r\n    case FIND_CLIENTS:\r\n      let foundClients = {\r\n        ...state,\r\n        foundClients: payload,\r\n      };\r\n      console.log(\"found here \", foundClients);\r\n      return foundClients;\r\n\r\n    case ERROR_MSG:\r\n      // localStorage.removeItem('auth-token');\r\n      return {\r\n        ...state,\r\n        errorMsg: payload,\r\n      };\r\n\r\n    case EDIT_CLIENT:\r\n      helpEditClient(payload);\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case DELETE_CLIENT:\r\n      helpDeleteClient(payload);\r\n      return {\r\n        ...state,\r\n        clientsArray: state.clientsArray.filter(\r\n          (client) => client._id !== payload\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default clientsReducer;\r\n","import {\r\n  GET_CARS,\r\n  EDIT_CAR,\r\n  DELETE_CAR,\r\n  TARGET_CAR,\r\n  FIND_CARS,\r\n} from \"../actions/types\";\r\nimport { helpDeleteCar, helpEditCar } from \"../helpers\";\r\n\r\nconst initialState = { carsArray: [], foundCars: [], car: {} };\r\n\r\nconst carsReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_CARS:\r\n      return {\r\n        ...state,\r\n        carsArray: payload,\r\n      };\r\n\r\n    case FIND_CARS:\r\n      return {\r\n        ...state,\r\n        foundCars: payload,\r\n      };\r\n\r\n    case EDIT_CAR:\r\n      helpEditCar(payload);\r\n      return { ...state };\r\n\r\n    case DELETE_CAR:\r\n      helpDeleteCar(payload);\r\n      return {\r\n        ...state,\r\n        carsArray: state.carsArray.filter((car) => car._id !== payload),\r\n      };\r\n\r\n    case TARGET_CAR:\r\n      return {\r\n        ...state,\r\n        car: payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default carsReducer;\r\n","import {\r\n  GET_OPERATIONS,\r\n  DELETE_OPERATION,\r\n  EDIT_OPERATION,\r\n  TARGET_OPERATION,\r\n} from \"../actions/types\";\r\nimport { helpEditOperation, helpDeleteOperation } from \"../helpers\";\r\n\r\nconst initialState = { operationsArray: [], operation: {} };\r\n\r\nconst OperationsReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_OPERATIONS:\r\n      return {\r\n        ...state,\r\n        operationsArray: payload,\r\n      };\r\n\r\n    case EDIT_OPERATION:\r\n      helpEditOperation(payload);\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case DELETE_OPERATION:\r\n      helpDeleteOperation(payload);\r\n      return {\r\n        ...state,\r\n        operationsArray: state.operationsArray.filter(\r\n          (operation) => operation._id !== payload\r\n        ),\r\n      };\r\n    case TARGET_OPERATION:\r\n      return {\r\n        ...state,\r\n        operation: payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default OperationsReducer;\r\n","import { CLICKED, SET_TARGET, TAB_CLICKED } from \"../actions/types\";\r\n\r\nconst initialState = { item: {}, isClicked: \"\", clickedTab: \"clientsList\" };\r\n\r\nexport const targetReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_TARGET:\r\n      return {\r\n        ...state,\r\n        item: payload,\r\n      };\r\n\r\n    case CLICKED:\r\n      return {\r\n        ...state,\r\n        isClicked: payload,\r\n      };\r\n\r\n    case TAB_CLICKED:\r\n      return {\r\n        ...state,\r\n        clickedTab: payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  USER_LOADING,\r\n  USER_LOADED,\r\n  REGISTER_SUCCESS,\r\n  LOGIN_SUCCESS,\r\n  AUTH_ERROR,\r\n  LOGIN_FAIL,\r\n  REGISTER_FAIL,\r\n  LOGOUT_SUCCESS,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  isLoading: false,\r\n  user: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        token: localStorage.getItem(\"auth-token\"),\r\n        isLoading: true,\r\n      };\r\n\r\n    case USER_LOADED:\r\n      let loadedState = {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        user: { ...state.user, ...action.payload },\r\n        errorMsg: \"\",\r\n      };\r\n      return loadedState;\r\n\r\n    case LOGIN_SUCCESS:\r\n    case REGISTER_SUCCESS:\r\n      localStorage.setItem(\"auth-token\", action.payload.token);\r\n      let loggedState = {\r\n        ...state,\r\n        token: localStorage.getItem(\"auth-token\"),\r\n        user: { ...state.user, ...action.payload }, // cuz payload already has user and token sent from api\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        errorMsg: \"\",\r\n      };\r\n      return loggedState;\r\n\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case REGISTER_FAIL:\r\n      localStorage.removeItem(\"auth-token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n\r\n    case LOGOUT_SUCCESS:\r\n      localStorage.removeItem(\"auth-token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport clientsReducer from \"./clientsReducer\";\r\nimport carsReducer from \"./carsReducer\";\r\nimport operationsReducer from \"./operationsReducer\";\r\nimport { targetReducer } from \"./targetReducer\";\r\nimport authReducer from \"./authReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  clients: clientsReducer,\r\n  cars: carsReducer,\r\n  operations: operationsReducer,\r\n  target: targetReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst middleware = [thunk];\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"../src/scss/main.scss\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store/store\";\r\nimport { ModalProvider } from \"react-modal-hook\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <ModalProvider>\r\n        <App />\r\n      </ModalProvider>\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}